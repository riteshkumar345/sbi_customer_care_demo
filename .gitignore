<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>App Permission UI</title>
  <script src="https://unpkg.com/htmx.org@1.9.5"></script>
  <style>
    body {
      font-family: "Segoe UI", sans-serif;
      padding: 20px;
      background: #f4f6f8;
    }

    h2 {
      margin-bottom: 10px;
    }

    .section {
      margin-bottom: 30px;
      width: 600px;
    }

    select, button {
      padding: 8px;
      font-size: 14px;
    }

    .app-select,
    .multi-select {
      display: flex;
      gap: 10px;
      align-items: top;
      flex-wrap: wrap;
    }

    .permissions-card {
      background: #ffffff;
      border: 1px solid #ddd;
      border-radius: 8px;
      padding: 4px;
      margin-bottom: 10px;
      display: flex;
      //justify-content: space-between;
      align-items: center;
      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05);
    }

    .permissions-card .permissions {
      display: flex;
      gap: 15px;
      margin-left: 15px;
    }

    .permissions-card button {
      background: crimson;
      color: white;
      border: none;
      padding: 6px 12px;
      cursor: pointer;
      border-radius: 4px;
      margin-left: 110px;
    }

    .save-btn {
      margin-top: 20px;
      background-color: #007bff;
      color: white;
      padding: 10px 20px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 15px;
    }

    label {
      font-size: 14px;
    }

    .multi-permissions {
      display: flex;
      gap: 10px;
      margin: 10px 0;
    }
  </style>
</head>
<body>

<h2>Permissions for 'AppName'</h2>
<hr>

<!-- Bottom section: Multi-select with shared permissions -->
<div class="section">

  <!-- App permissions output -->
  <div id="permissionCards"></div>
  <h3>Add one or more applications to the list</h3>

  <div class="multi-select">
    <select id="multiAppSelect" multiple size="4" style="width: 400px; height: 100px; ">
      <option value="OwnerApp1">OwnerApp1</option>
      <option value="OwnerApp2">OwnerApp2</option>
      <option value="OwnerApp3">OwnerApp3</option>
      <option value="OwnerApp4">OwnerApp4</option>
      <option value="OwnerApp5">OwnerApp5</option>
    </select>

    <div class="multi-permissions">
      <label><input type="checkbox" id="multi-read"> Read</label>
      <label><input type="checkbox" id="multi-write"> Write</label>
      <label><input type="checkbox" id="multi-delete"> Delete</label>
      <label><input type="checkbox" id="multi-manage"> Manage</label>
    </div>

    <button onclick="addMultipleApps()" style="margin-left: 13px;">Add multiple</button>
  </div>
</div>

<!-- Save button -->
<button class="save-btn" onclick="savePermissions()">Save</button>

<script>
  const selectedApps = new Set();

  function addApp() {
    const dropdown = document.getElementById('appDropdown');
    const app = dropdown.value;
    if (!app || selectedApps.has(app)) {
      dropdown.value = '';
      return;
    }
    createCard(app, []);
    selectedApps.add(app);
    dropdown.value = '';
  }

  function addMultipleApps() {
    const select = document.getElementById('multiAppSelect');
    const read = document.getElementById('multi-read').checked;
    const write = document.getElementById('multi-write').checked;
    const del = document.getElementById('multi-delete').checked;
    const manage = document.getElementById('multi-manage').checked;

    const selected = Array.from(select.selectedOptions).map(opt => opt.value);

    const permissions = [];
    if (read) permissions.push("read");
    if (write) permissions.push("write");
    if (del) permissions.push("delete");
    if (manage) permissions.push("manage");

    selected.forEach(app => {
      if (!selectedApps.has(app)) {
        createCard(app, permissions);
        selectedApps.add(app);
      }
    });

    // Optionally clear selections
    select.selectedIndex = -1;
    document.getElementById('multi-read').checked = false;
    document.getElementById('multi-write').checked = false;
    document.getElementById('multi-delete').checked = false;
    document.getElementById('multi-manage').checked = false;
  }

  function createCard(app, perms = []) {
    const container = document.getElementById('permissionCards');
    const card = document.createElement('div');
    card.className = 'permissions-card';
    card.dataset.app = app;

    card.innerHTML = `
      <strong>${app}</strong>
      <div class="permissions">
        <label><input type="checkbox" value="read" ${perms.includes("read") ? "checked" : ""}> Read</label>
        <label><input type="checkbox" value="write" ${perms.includes("write") ? "checked" : ""}> Write</label>
        <label><input type="checkbox" value="delete" ${perms.includes("delete") ? "checked" : ""}> Delete</label>
        <label><input type="checkbox" value="manage" ${perms.includes("manage") ? "checked" : ""}> Manage</label>
      </div>
      <button onclick="removeApp(this, '${app}')">Remove</button>
    `;
    container.appendChild(card);
  }

  function removeApp(btn, app) {
    btn.closest('.permissions-card').remove();
    selectedApps.delete(app);
  }

  function savePermissions() {
    const cards = document.querySelectorAll('.permissions-card');
    const permissions = [];

    cards.forEach(card => {
      const app = card.dataset.app;
      const perms = Array.from(card.querySelectorAll('input[type="checkbox"]:checked'))
        .map(cb => cb.value);
      permissions.push({ app, permissions: perms });
    });

    console.log("Saving Permissions:", permissions);
    alert("Permissions saved!");
  }
</script>

</body>
</html>


====================================






<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Application List</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      padding: 20px;
    }
    h1 {
      text-align: ;
      margin-bottom: 20px;
    }
    .search-container,
    .add-container {
	  margin-bottom: 10px;
    }
	.add-container button {
     padding: 5px 20px;
     font-size: 16px;
     cursor: pointer;
     background-color: #e0e0e0;
     color: #00000;
     border: 1px solid;
     border-radius: 4px;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      background-color: #fff;
    }
    th, td {
      padding: 12px 15px;
      border: 1px solid #ddd;
      text-align: left;
    }

    th {
      background-color: #f2f2f2;
      font-weight: bold;
    }

    tr:hover {
      background-color: #f1f1f1;
    }
    .pagination {
      text-align: center;
      margin-top: 20px;
    }
    .pagination button {
      padding: 8px 12px;
      margin: 2px;
      border: 1px solid #ccc;
      background-color: #fff;
      cursor: pointer;
    }
    .pagination button.active {
      background-color: #007bff;
      color: #fff;
      border-color: #007bff;
    }
    .pagination button:hover {
      background-color: #e0e0e0;
    }
    .container {
      margin-bottom: 30px;
    }
    label {
      display: block;
      margin-top: 10px;
    }
    input, textarea {
      width: 300px;
      padding: 5px;
    }
    #display-section {
      border-top: 2px solid #ccc;
      padding-top: 20px;
    }
  </style>
</head>

<body>

  <h1>Create Application</h1>
  <hr><br>
  
  <!-- Add New App Form -->
<div class="add-container" style="max-width: 380px;">
  <div style="margin-bottom: 10px; display: flex; align-items: center;">
    <label for="newAppName" style="width: 100px;">Name:</label>
    <input type="text" id="newAppName" style="flex: 1;">
  </div>

  <div style="margin-bottom: 10px; display: flex; align-items: center;">
    <label for="newAppDesc" style="width: 100px;">Description:</label>
    <input type="text" id="newAppDesc" style="flex: 1;">
  </div>
  <br>
  <button onclick="addNewApp()" style="width: 100px;">Create</button>
</div>
  
  <!-- Search Input -->
  <h1>Application List</h1>
  <hr><br>
  <div class="search-container">
    <input type="text" id="searchInput" placeholder="Search by app name...">
  </div>

  <!-- App Table -->
  <table>
    <thead>
      <tr>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody id="tableBody">
      <!-- Filled by JavaScript -->
    </tbody>
  </table>

  <!-- Pagination Controls -->
  <div class="pagination" id="pagination"></div>

  <script>
    let appList = [
      { name: "ABC", desc: "ABC" },
      { name: "ABCD", desc: "ABCD App" },
      { name: "ABCDE", desc: "ABCDE App" },
      { name: "Access_Test", desc: "AppID for Access Test Purpose" },
      { name: "AEKO", desc: "AEKO" },
      { name: "AEPS", desc: "AEPS" },
      { name: "AFR", desc: "SAP Formula Racing" },
      { name: "AIP", desc: "Automated Integration Process" },
      { name: "ALERTING ", desc: "ALERTING" },
      { name: "AMS_Logger", desc: "AMS_Logger" },
      { name: "ANTON", desc: "Projekt ANTON" },
      { name: "ASIC", desc: "ASIC" },
	  { name: "B2B_UMS", desc: "B2B_UMS" },
      { name: "BACKOUT", desc: "Backout Tool" },
      { name: "BASIS", desc: "BASIS" },
      { name: "BPA_GEN", desc: "BPA_GEN" },
      { name: "BPACBD", desc: "CostBreakDown" },
      { name: "BPluS_test2", desc: "BPluS Testinstanz" },
      { name: "BTE", desc: "ONB / Bauteilentwicklung" }
    ];

    let filteredList = [...appList];
    const rowsPerPage = 8;
    let currentPage = 1;

    function displayTable(page) {
      const tableBody = document.getElementById("tableBody");
      tableBody.innerHTML = "";

      const start = (page - 1) * rowsPerPage;
      const end = start + rowsPerPage;
      const pageItems = filteredList.slice(start, end);

      if (pageItems.length === 0) {
        tableBody.innerHTML = `<tr><td colspan="2">No results found.</td></tr>`;
        return;
      }

      for (let item of pageItems) {
        const row = `<tr><td>${item.name}</td><td>${item.desc}</td></tr>`;
        tableBody.innerHTML += row;
      }
    }

    function setupPagination() {
      const pagination = document.getElementById("pagination");
      pagination.innerHTML = "";
      const pageCount = Math.ceil(filteredList.length / rowsPerPage);

      for (let i = 1; i <= pageCount; i++) {
        const btn = document.createElement("button");
        btn.textContent = i;
        if (i === currentPage) btn.classList.add("active");

        btn.addEventListener("click", () => {
          currentPage = i;
          displayTable(currentPage);
          setupPagination();
        });

        pagination.appendChild(btn);
      }
    }

    function handleSearch() {
      const searchTerm = document.getElementById("searchInput").value.toLowerCase();
      filteredList = appList.filter(app => app.name.toLowerCase().includes(searchTerm));
      currentPage = 1;
      displayTable(currentPage);
      setupPagination();
    }

    function addNewApp() {
      const name = document.getElementById("newAppName").value.trim();
      const desc = document.getElementById("newAppDesc").value.trim();

      if (!name || !desc) {
        alert("Please enter both App Name and Description.");
        return;
      }

      appList.push({ name, desc });
      document.getElementById("newAppName").value = "";
      document.getElementById("newAppDesc").value = "";

      handleSearch(); // Apply filter again (if any)
    }

    document.getElementById("searchInput").addEventListener("input", handleSearch);

    // Initial render
    displayTable(currentPage);
    setupPagination();
  </script>

</body>

</html>













<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <title>JWT User Management</title>

    <!-- HTMX -->
    <script src="https://unpkg.com/htmx.org@1.9.2"></script>

    <style>
        body {
            font-family: Arial, sans-serif;
			margin: 40 px;
            background-color: #f9f9f9s;
        }

        h2 {
            font-size: 1.5rem;
            margin-bottom: 1.5rem;
        }

        table {
            width: 20%;
            border-collapse: collapse;
            background-color: #fff;
			text-align: left;
        }

        th, td {
            padding: 12px 15px;
			border: 1px solid #ddd
        }

        th {
            background-color: #f4f4f4;
        }
        tr:hover {
            background-color: #f1f1f1ss;
        }
        .add-user-header {
            font-weight: bold;
            padding: 0.05rem;
            background-color: #f4f4f4;
			width: 19.7%;
			border: 1px solid #ddd
        }

        input[type="text"] {
            width: 18.5%;
            padding: 0.5rem;
            margin-top: 0.5rem;
        }

        .form-actions {
            margin-top: 1rem;
        }

        button {
            padding: 12px 15px;
            font-size: 16px;
			cursor: pointer;
            font-weight: #e0e0e0s;
			color: #00000;
			border: 1px solid;
            border-radius: 4px;
			
        }
    </style>
</head>
<body>

    <h1>Technical user for '<span th:text="${	}">PBA</span>'</h1>
	<hr><br>
    <form th:action="@{/jwt-users/save}" method="post" 
          hx-post="/jwt-users/save" hx-target="#form-container" hx-swap="outerHTML" id="form-container">

        <!-- JWT User Table -->
        <table>
            <thead>
                <tr>
                    <th style="width: 10%;" >Revoke</th>
                    <th>Technical User</th>
                </tr>
            </thead>
            <tbody>
                <tr th:each="user : ${jwtUsers}" >
                    <td>
                        <input type="checkbox" name="revokeUsers" th:value="${user}" />
                    </td>
                    <td th:text="${user}" align="left">FOX0ABC</td>
                </tr>
            </tbody>
        </table>

        <!-- Add new user -->
		<br><br>
        <div class="add-user-header">Add a new Technical User</div>
        <input type="text" name="newUser" placeholder="Enter a new technical user..." th:value="${newUser}"/>

        <!-- Save Button -->
        <div class="form-actions">
            <button type="submit">Save</button>
        </div>
    </form>

</body>
</html>
